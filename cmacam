#!/usr/bin/python
# -*- coding: utf-8 -*-

import os
import subprocess
from subprocess import PIPE


def exists(cmd):
  witch = subprocess.Popen(["which", cmd], stdout=PIPE, stdin=PIPE)
  w = witch.stdout.read()
  witch.stdin.close()
  witch.wait()
  return bool(w.strip())

def dep_check():
  missing = ''
  if not exists("jbofihe"):
    missing += """Requires jbofihe. Do
  sudo apt-get install jbofihe
under any fine Linux distribution.\n"""
  if not exists("camxes"):
    bin = os.path.join(os.environ["HOME"], 'bin/')
    #bin = "~/bin/"
    assert bin[-1] == '/'
    missing += """Requires camxes. Running these commands will probably get camxes running:

######
mkdir -p BIN/.camxes_jar
cd BIN/.camxes_jar
wget http://www.digitalkingdom.org/~rlpowell/hobbies/lojban/grammar/rats/lojban_peg_parser.jar
cat << EOF > BIN/camxes
#!/bin/sh
cd BIN/.camxes_jar
java -Xss64m -jar lojban_peg_parser.jar $@
EOF
chmod +x BIN/camxes""".replace("BIN/", bin)
    
    if not bin in os.environ["PATH"]:
      missing += '\nexport PATH="$PATH:BIN/"'.replace("BIN/", bin)
    missing += "\n######\n"
  if missing: raise SystemExit(missing)


def get_cmaf(word):
  cmafihe = subprocess.Popen("cmafihe", stdin=PIPE, stdout=PIPE)
  cmafihe.stdin.write(word+'\n')
  cmafihe.stdin.close()
  d = cmafihe.stdout.readline()
  cmafihe.wait()
  d.strip()
  gloss = d[d.find('[')+1:d.find(']')]
  gloss = gloss.strip()
  return gloss

def parse_gloss():
  camxes = subprocess.Popen("camxes", stdout=PIPE)
  try:
    while 1:
      line = camxes.stdout.readline()
      if not line: break
      if ':' in line:
        head, tail = line.split(':')
        tail = tail.strip()
        gloss = get_cmaf(tail)
        if gloss:
          print line.strip('\n') + " [%s]" % (gloss,)
        else:
          print line.strip('\n')
      else:
        print line.strip('\n')
  finally:
    camxes.wait()


if __name__ == '__main__':
  dep_check()
  parse_gloss()
